apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-test-app-mysqldb
  labels:
    app: my-test-app-mysqldb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-test-app-mysqldb
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-java: 'true'
        sidecar.opentelemetry.io/inject: 'true'
      labels:
        app: my-test-app-mysqldb
    spec:
      initContainers:
        - name: init-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";'] 
      containers:
        - name: my-test-app-mysqldb
          image: mgmdevop/petclinic-app:docker-sql2
          ports:
            - containerPort: 8080
          env:                      
            - name: MYSQL_USER
              value: petclinic            
            - name: MYSQL_PASS
              value: petclinic
           

---

apiVersion: v1
kind: Service
metadata:
  name: my-test-app-mysqldb-nodeport-service
spec:
  type: NodePort 
  selector: 
    app: my-test-app-mysqldb
  ports: 
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 31280
