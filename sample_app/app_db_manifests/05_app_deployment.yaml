apiVersion: apps/v1
kind: Deployment 
metadata:
  name: usermgmt-webapp
  labels:
    app: usermgmt-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usermgmt-webapp
  template:  
    metadata:
      labels: 
        app: usermgmt-webapp
    spec:
      initContainers:
        - name: init-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']      
      containers:
        - name: usermgmt-webapp
          image: stacksimplify/kube-usermgmt-webapp:1.0.0-MySQLDB
          imagePullPolicy: Always
          ports: 
            - containerPort: 8080           
          env:
            - name: DB_HOSTNAME
              value: "mysql"            
            - name: DB_PORT
              value: "3306"            
            - name: DB_NAME
              value: "webappdb"            
            - name: DB_USERNAME
              value: "root"            
            - name: DB_PASSWORD
              value: "dbpassword11"            

---

apiVersion: v1
kind: Service 
metadata:
  name: usermgmt-webapp-nodeport-service
spec:
  type: NodePort # ClusterIp, # NodePort
  selector:
    app: usermgmt-webapp
  ports: 
    - name: http
      port: 80 # Service Port
      targetPort: 8080 # Container Port
      nodePort: 31280 # Node Port

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: usermgmt-webapp-clb-service
#   labels: 
#     app: usermgmt-webapp
# spec: 
#   type: LoadBalancer
#   selector: 
#     app: usermgmt-webapp
#   ports: 
#     - port: 80 # Service Port
#       targetPort: 8080 # Container Port

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: usermgmt-webapp-nlb-service
#   labels: 
#     app: usermgmt-webapp
#   annotations:
#     service.beta.kubernetes.io/aws-load-balancer-type: nlb    # To create Network Load Balancer
# spec:
#   type: LoadBalancer # Default - CLB
#   selector:
#     app: usermgmt-webapp
#   ports: 
#     - port: 80
#       targetPort: 8080

# kubectl exec my-test-app-mysqldb-64cd6bdcf9-4jxrz -- sh -c 'ping mysql'